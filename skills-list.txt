# Общие #
	-- Общие принципы программирования, какие то важные/полезные навыки и знания, общие знания, расширение кругозора
	
	Алгоритмы и структуры данных
	Антипаттерны
	Паттерны проектирования
	Объектно ориентированный анализ
	Объекто-ориентированное программирование (ООП)
		Общие принципы и цели которые решает ООП
	Принципы программирования
		S.O.L.I.D.
	Создание архитектур приложений (Проектирование приложений)
		Архитекруты MV*
		Другие виды архитектур
	Проектирование БД
		Нормальные формы
		Денормализация
		...
	Комментирование кода
		phpDoc
		JSDoc
	Сетевые технологии
		Протоколы (HTTP, WS, ...)
		Веб форматы (JSON, JSONP, XML)
		Сервера (Apache, Nginx)
		Модель OSI
		AJAX (как работает, что из себя представляет и что это вообще такое)
		RIA - Rich Internet application
		...
	
	Регулярные выражения (JS, PHP)
	Тестирование кода
		Теория:
			Виды тестирования
				Юнит
				Функциональное
				Нагрузка 
				Автотесты
				(упор сделать в Unit)
			Фикстуры, Моки, Стабы
			Отличия видов тестирования
			Инструменты для тестирования
			Faker - генерация данных для автоматического тестирования
		JS (unit, TDD, BDD)
	Командная строка
		(ps aux, grep, top, ls, cd, df) (bash)
		Unix command line tools
	Системы контроля версий
		Git (SVN)
	Безопасность
		Тестирование безопасности
		Уязвимости
			XSS
			CSRF/XSRF
	Браузеры (Webkit, Gecko)
		Движки браузеров
		Принцип работы (от клика на ссылку до вывода результата)
		User Agent
		...
	REST API
	Шаблонизаторы
	Стандарты RFC
	Организация процесса разработки продукта
		От использования инструмента до организации самого процесса (методологии организации процесса)
	Бенчмарки

Расширение кругозора
	Функциональное программирование
	Работа с кодировками (UTF8, windows1251 etc.)
	Кэш
		Общие поняти
		Виды кеша
	Изучение хостинг панелей 				(Необходимо знать как они работают и какие возможности имеют
											для быстрой настройки)
	


# FrontEnd #
	-- Работа на front-end стороне, принципы разработки, верстка, технологии верстки (сборщики, плагины к ним и т.д.)

	Общие:
		Graceful Degradation / Progressive Enhancement
	Языки и технологии:
		HTML
		CSS
		JavaScript

	HTML
		Семантика, общие понятия SEO, Микроразметка (Основы, этого пока хватит), !! ВАЛИДНАЯ ВЕРСТКА !!
		meta-теги (meta-данные) Принцип работы, виды ...
		Подтянуть знания по тегам
		Новые теги в HTML5 (video, aside, section, article и т.д.)
		
	CSS
		Основы, методологии верстки, принципы верстки
		Методологии
			SMACSS
			OOCSS
			БЭМ
			AtomCSS
			...
		Изучение всех CSS-свойств (Пройтись по все свойствам, узнать что не знал, вспомнить что забыл)
		Тонкости:
			Свойство: will-change
			Стековый контекст (контекст наложения z-index)
			Блоки-обертки для некоторых CSS-свойств
			z-index: контекст наложения
			offsetParent: как определяется
			Работа со шрифтами (@font-face, ед. изм., расширения файлов со шрифтами)
		Анимация с аппаратным ускорением
		CSS-фреймворки
			Bootstrap (Подробнее остановиться на документации)

	JavaScript
		Основы языка, принцип работы, тонкости
		UglifyJS
		JSHint
		JSLint
		ES6
		'use strict'
		Паттерны для JS
		Профилировщики
		Перехват событий CSS-анимации в JavaScript
		Управлении CSS-анимацией и переходами
		AdBlock
		Ajax / CORS
		MVC / MVVM в JavaScript
		Отладка
		Babel
		Побитовые операторы
		Фрейворки
			React.js
		JS-библиотеки
				Не обязательно изучать все досканально, главное попробовать каждую из них и посмотреть что она из себя представляет, так сказать для расширения кругозора, что бы было с чем сравнивать
			jQuery
			Underscore
			React (Flux/Redux)
			Modernizr - обнаруживает HTML5/CSS3 ф-ции в браузере пользователя
			Babel - компилятор для написания JavaScript
			Vue - создание интерактивных интерфейсов
			Three - 3D
			WOW - анимация при прокрутки страницы
			Moment - Работа с датой и временем
			Mocha - написание тестов
		...
	Системы сборки
		Webpack
		Gulp
	Модульность
		Не только JS, общие понятия модульности
		AMD ( RequireJS )
		Common JS ( browserify )
		ES6 Modules

	Клиентская оптимизация
	Юзабилити
	Доплонительно:
		Анимация
		SVG
		Кроссбраузерность (CSS/JS)
		PhotoShop
	Одностраничные приложения (Single Page Application - SPA)
	Работа с Canvas
	

# BackEnd #
	-- Разработка сайтов на Back-end стороне

	Безопасность
		Работа с пользователями (accessToken & authToken & etc)
	Проектирование архитектуры приложения
	Проектирование БД
	Серверная часть
		Язык: PHP
			Куки/Сессии
			Header (заголовки)
			php.ini
		Настройки сервера
	.htaccess
	.htpasswd
	Механизмы ORM ???
	
	Базы данных
		SQL
		Типы данных
		SQL & NoSQL DB
		Отличия "Реляционных" от "Нереляционных" БД
	Оптимизация на стороне сервера
	namespace / use
	Node.js


##### Полезные навыки #####
	Мозг:
		Развитие памяти, концентрации, внимания, состояние постоянной осознанности
		Состояние потока
		Интелект
	Изучени кода других проектов (Библиотеки, Фреймворки и т.д.) для сравнения своего 
		кода, нахождение каких то интересных моментов

Для изучения всего материала его необходимо организовать каким либо способом (изучить данный вопрос).
Так же нобходимо реализовать систему повторения материала для закрепления, как раз проверю как они работают. Можно найти какие то различные системы повторения (Кривая Эбингаузена ...). Возможно нужно будет разделить материал на блоки (Спринты)
